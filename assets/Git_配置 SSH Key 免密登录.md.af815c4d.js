import{_ as s,c as a,o as e,N as n}from"./chunks/framework.0799945b.js";const u=JSON.parse('{"title":"配置 SSH Key 免密登录","description":"","frontmatter":{},"headers":[],"relativePath":"Git/配置 SSH Key 免密登录.md","lastUpdated":1681139721000}'),l={name:"Git/配置 SSH Key 免密登录.md"},o=n(`<h1 id="配置-ssh-key-免密登录" tabindex="-1">配置 SSH Key 免密登录 <a class="header-anchor" href="#配置-ssh-key-免密登录" aria-label="Permalink to &quot;配置 SSH Key 免密登录&quot;">​</a></h1><h2 id="_1-前言" tabindex="-1">1. 前言 <a class="header-anchor" href="#_1-前言" aria-label="Permalink to &quot;1. 前言&quot;">​</a></h2><p>在我们提交代码的时候， Github需要用我们账号对应的公钥去解密我们提交的代码，如果能正确的解密说明当前提交代码的用户合法的。</p><p>所以在提交代码事先我们的电脑中需要持有一个私钥我们的github账户中也有持有一个公钥 GitHub配置SSH Key的目的是为了帮助我们在通过git提交代码是，不需要繁琐的验证过程，简化操作流程。</p><h2 id="_2-生成-ssh-密钥" tabindex="-1">2. 生成 .ssh 密钥 <a class="header-anchor" href="#_2-生成-ssh-密钥" aria-label="Permalink to &quot;2. 生成 .ssh 密钥&quot;">​</a></h2><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">ssh-keygen</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-t</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">rsa</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-C</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">dxggofficial@gmail.com​​</span></span></code></pre></div><p>一直按回车键就行了​​</p><p>在指定的保存路径（默认是在 <code>~/.ssh</code> 路径）下会生成2个名为id_rsa和id_rsa.pub（公钥）的文件：</p><p>Linux可以使用cat命令查看</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">cat</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">~/.ssh/id_rsa.pub</span></span>
<span class="line"><span style="color:#FFCB6B;">ssh-rsa</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">AAAAB3NzaC1yc2EAAAADAQABAAACAQDRC57mZkVoWLoyMM1MMCMTXS2yI4e/58HMndbZNyh1SmQZICLdvt7iIrMiiB30Mya7tEtL9UPghnl8oOA9OwvEAtVmym5FfxJIKmkRDG1oTOPCdu6bSi1oeiC/dWb8GGBrZZuhukDtZlzkxUZ6OorLT8Dods4REJjDLTmhfExp9K8rBGpxrBpWR2GJEup11h5Jci07JsOjaqYhOibWVKOqqeaF5lca5Bo8rM79MjUHtLPuZP0ewDNrKKabbhxcapnIYrehnu5wpvWL1NZmZlAUxYaKR8PRPnMEOmk5sYUXuTnCIGtVGXPepV+Q4S9o+9xwXHDZQ+6tuOazFRF/OQSja2kFLYS1NHr3A9X0F01dJtWEd8qh+6yId/0TkDlA4DQHTpUMiV0Mi2LLX6Z4PbUgSvsm/C3l3GXmnFVTXXbwTNJ7Z049vSUleszvjF3ZSc5IB1wpJcFChnx/pQNXrlYXZb6BBWxWvh2I8ULXaVNAlGgnOBEF8Dl9HagJueCzTQ7F24yvnOOpzPsUfPaBDl6+OvWPlWHR1YZQmJTC0S/1xGcUo5KoejIWnl5A4pOFWurlD8scprZe8G9g5EHKhQH7AVmBhRnTOispnncqYrhcPL5wAjyw==</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">dxggofficial@gmail.com</span></span></code></pre></div><h2 id="_3-添加公钥到你的github" tabindex="-1">3. 添加公钥到你的Github <a class="header-anchor" href="#_3-添加公钥到你的github" aria-label="Permalink to &quot;3. 添加公钥到你的Github&quot;">​</a></h2><p>再打开你的Github，进入配置页： Settings -- SSH and GPG keys</p><p>添加本地生成的ssh Key，选择New SSH key 把内容拷贝到key下面的输入框，并为这个key定义一个名称（通常用来区分不同主机），然后保存</p><h2 id="_4-测试是否成功" tabindex="-1">4. 测试是否成功 <a class="header-anchor" href="#_4-测试是否成功" aria-label="Permalink to &quot;4. 测试是否成功&quot;">​</a></h2><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">root@e96a3a82feff /</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"># ssh -T git@github.com</span></span>
<span class="line"><span style="color:#FFCB6B;">Hi</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">DXGGOfficial!</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">You</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">ve successfully authenticated, but GitHub does not provide shell access.</span></span></code></pre></div>`,15),t=[o];function p(c,r,i,h,d,y){return e(),a("div",null,t)}const A=s(l,[["render",p]]);export{u as __pageData,A as default};
